---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: logging
  labels:
    app: elasticsearch
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "Elasticsearch"
spec:
  ports:
  - name: db
    port: 9200
    protocol: TCP
    targetPort: db
  - name: transport
    port: 9300
    protocol: TCP
    targetPort: transport 
  selector:
    app: elasticsearch
---
# RBAC authn and authz
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elasticsearch
  namespace: logging 
  labels:
    app: elasticsearch
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: elasticsearch
  labels:
    app: elasticsearch
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
rules:
- apiGroups:
  - ""
  resources:
  - "services"
  - "namespaces"
  - "endpoints"
  verbs:
  - "get"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: efk
  name: elasticsearch
  labels:
    app: elasticsearch
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
subjects:
- kind: ServiceAccount
  name: elasticsearch
  namespace: logging 
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: elasticsearch
  apiGroup: ""
---
# Elasticsearch deployment itself
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: logging 
  labels:
    app: elasticsearch
    version: v5.6.4
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  serviceName: elasticsearch
  replicas: 3
  template:
    metadata:
      labels:
        app: elasticsearch
        version: v5.6.4
        kubernetes.io/cluster-service: "true"
    spec:  
      nodeSelector:
        role: es
      serviceAccountName: elasticsearch
      containers:
      - image: registry.ispacesys.cn/k8s/elasticsearch-efk:6.4.1
        name: elasticsearch
        resources:
          # need more cpu upon initialization, therefore burstable class
          limits:
            cpu: 1000m
            memory: 4Gi
          requests:
            cpu: 100m
        ports:
        - containerPort: 9200
          name: db
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - name: elasticsearch
          mountPath: /data
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ELASTICSEARCH_SERVICE_NAME
          value: elasticsearch
      volumes:
      - name: elasticsearch
        hostPath:
          path: /es-data
      initContainers:
      - image: registry.ispacesys.cn/cig/alpine:3.6
        command: ["/sbin/sysctl", "-w", "vm.max_map_count=262144"]
        name: elasticsearch-init
        securityContext:
          privileged: true
#  volumeClaimTemplates:
#    - metadata:
#        name: elasticsearch
#        namespace: kube-system
#      spec:
#        accessModes: ["ReadWriteOnce"]
#        storageClassName: rook-ceph-block
#        resources:
#          requests:
#            storage: 1Gi
